# Generated by Django 4.2.5 on 2023-10-11 20:11

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('idDepartamento', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id de Departamento')),
                ('depto', models.CharField(max_length=80, verbose_name='Nombre del departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('idEstado', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id Estado')),
                ('estado', models.CharField(max_length=10, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='RolUsuario',
            fields=[
                ('idRol', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id Rol')),
                ('rol', models.CharField(max_length=12, verbose_name='Rol')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('idProducto', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id de Producto')),
                ('nombreProducto', models.CharField(max_length=80, verbose_name='Nombre del producto')),
                ('esFungible', models.BooleanField(max_length=80, verbose_name='Es fungible')),
                ('stock', models.IntegerField(verbose_name='Stock')),
                ('stockMinimo', models.IntegerField(verbose_name='Stock Minimo')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripcion del producto')),
                ('imagen', models.ImageField(default='sinfoto.jpg', upload_to='images/', verbose_name='Imagen')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.departamento')),
            ],
            options={
                'permissions': [('can_view_producto', 'Puede ver la p√°gina de productos')],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idUsuario', models.AutoField(primary_key=True, serialize=False)),
                ('correo', models.EmailField(max_length=60, unique=True)),
                ('sede', models.CharField(max_length=45)),
                ('departamento', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='core.departamento')),
                ('estado', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='core.estado')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('rol', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='core.rolusuario')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.producto')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(through='core.CartItem', to='core.producto'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customuser'),
        ),
    ]
