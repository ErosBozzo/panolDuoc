# Generated by Django 4.2.6 on 2023-11-13 20:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idUsuario', models.AutoField(primary_key=True, serialize=False)),
                ('correo', models.EmailField(max_length=60, unique=True)),
                ('sede', models.CharField(max_length=45)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('idDepartamento', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id de Departamento')),
                ('depto', models.CharField(max_length=80, verbose_name='Nombre del departamento')),
            ],
        ),
        migrations.CreateModel(
            name='EstadoProducto',
            fields=[
                ('idEstadoProducto', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id Estado Producto')),
                ('estadoProducto', models.CharField(max_length=20, verbose_name='Estado Producto')),
            ],
        ),
        migrations.CreateModel(
            name='EstadoUsuario',
            fields=[
                ('idEstadoUsuario', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id Estado')),
                ('estadoUsuario', models.CharField(max_length=10, verbose_name='Estado Usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('idProducto', models.AutoField(primary_key=True, serialize=False, verbose_name='Id de Producto')),
                ('nombreProducto', models.CharField(max_length=80, verbose_name='Nombre del producto')),
                ('esFungible', models.BooleanField(max_length=80, verbose_name='Es fungible')),
                ('marca', models.CharField(max_length=40, verbose_name='Marca')),
                ('modelo', models.CharField(max_length=20, verbose_name='Modelo')),
                ('stock', models.IntegerField(verbose_name='Stock')),
                ('stockMinimo', models.IntegerField(verbose_name='Stock Minimo')),
                ('descripcion', models.CharField(max_length=200, verbose_name='Descripcion del producto')),
                ('imagen', models.ImageField(default='sinfoto.jpg', upload_to='images/', verbose_name='Imagen')),
                ('ubicacionRack', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Rack')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.departamento', verbose_name='Departamento')),
                ('estadoProducto', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.estadoproducto', verbose_name='Estado del producto')),
            ],
            options={
                'permissions': [('can_view_producto', 'Puede ver la p치gina de productos')],
            },
        ),
        migrations.CreateModel(
            name='ProductosSolicitud',
            fields=[
                ('idProductosSolicitud', models.AutoField(primary_key=True, serialize=False, verbose_name='Id de ProductosSolicitud')),
                ('cantidad', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.producto', verbose_name='Producto')),
            ],
        ),
        migrations.CreateModel(
            name='RolUsuario',
            fields=[
                ('idRol', models.IntegerField(primary_key=True, serialize=False, verbose_name='Id Rol')),
                ('rol', models.CharField(max_length=12, verbose_name='Rol')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('idSolicitud', models.AutoField(primary_key=True, serialize=False, verbose_name='Id de Solicitud')),
                ('fecha_solicitud', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Solicitud')),
                ('fecha_retiro', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Retiro')),
                ('fecha_devolucion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Devoluci칩n')),
                ('fecha_devolucion_efectiva', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Devoluci칩n Efectiva')),
                ('estaAprobado', models.BooleanField(default=False, verbose_name='Est치 Aprobado')),
                ('comentarios', models.TextField(blank=True, verbose_name='Comentarios')),
                ('productos', models.ManyToManyField(related_name='solicitudes', through='core.ProductosSolicitud', to='core.producto', verbose_name='Productos')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes', to='core.customuser', verbose_name='Usuario')),
            ],
        ),
        migrations.AddField(
            model_name='productossolicitud',
            name='solicitud',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.solicitud', verbose_name='Solicitud'),
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detalle', models.TextField()),
                ('leido', models.BooleanField(default=False)),
                ('tipo', models.CharField(choices=[('envio_solicitud', 'Usuario ha enviado una solicitud'), ('aprobacion', 'Tu solicitud fue aprobada'), ('rechazo', 'Tu solicitud fue rechazada')], max_length=20)),
                ('fecha_notificacion', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nombre_notificaciones', to='core.customuser')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='departamento',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='core.departamento'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='estadoUsuario',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='core.estadousuario'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='rol',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='core.rolusuario'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.producto')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(through='core.CartItem', to='core.producto'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customuser'),
        ),
    ]
